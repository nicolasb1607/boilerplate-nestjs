name: Deploy to staging AWS

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging
  workflow_dispatch:

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Upload build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: ./dist

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: ./dist

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Install Pulumi CLI
        run: |
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$PATH:$HOME/.pulumi/bin
          echo "$HOME/.pulumi/bin" >> $GITHUB_PATH

      - name: Install Pulumi Dependencies
        working-directory: ./infra
        run: |
          npm install
          npm install @pulumi/pulumi @pulumi/aws

      - name: Run Pulumi Preview
        uses: pulumi/actions@v6
        id: pulumi
        with:
          command: preview
          stack-name: nicolasb1607/boilerplate-nestjs/staging
          work-dir: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_SECRET_ACCESS_TOKEN }}

      - name: Load SSH Private Key
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to private EC2 using Bastion Host
        env:
          BASTION_IP: ${{ steps.pulumi.outputs.bastionIp }}
          EC2_IP: ${{ steps.pulumi.outputs.ec2Ip }}
        run: |
          ssh -o StrictHostKeyChecking=no -o ProxyCommand="ssh -o StrictHostKeyChecking=no ec2-user@$BASTION_IP -W %h:%p" ec2-user@$EC2_IP "mkdir -p ./app && rm -rf ./app/*"
          scp -r -o StrictHostKeyChecking=no -o ProxyCommand="ssh -o StrictHostKeyChecking=no ec2-user@$BASTION_IP -W %h:%p" ./dist/* ec2-user@$EC2_IP:./app
          ssh -o StrictHostKeyChecking=no -o ProxyCommand="ssh -o StrictHostKeyChecking=no ec2-user@$BASTION_IP -W %h:%p" ec2-user@$EC2_IP \
            "cd ./app \
            && npm install -g pnpm \
            && pnpm install \
            && pnpm run start:prod"